<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.lang.easylunch.persistence.BestellungMapper">

    <select id="findById" parameterType="long" resultType="Bestellung">
        select * from bestellung where id = #{id}
    </select>

    <select id="findAll" parameterType="long" resultType="Bestellung">
        select * from bestellung order by ausgabezeitpunkt
    </select>

    <select id="findAllByBenutzerAfterDate" parameterType="map" resultType="Bestellung">
        select * from bestellung
                 where benutzer_id = #{benutzerId}
                       and konsumationszeitpunkt &gt; #{date}
                 order by konsumationszeitpunkt, ausgabepreis
    </select>

    <select id="findAllByBenutzerAndDateRange" parameterType="map" resultType="Bestellung">
        select * from bestellung
                 where benutzer_id = #{benutzerId}
                       and konsumationszeitpunkt &gt;= #{begin}
                       and konsumationszeitpunkt &lt; #{end}
                       and not storniert
                 order by konsumationszeitpunkt, ausgabepreis
    </select>

    <insert id="save" parameterType="Bestellung" useGeneratedKeys="true" keyProperty="id">
        insert into bestellung (konsumationszeitpunkt, ausgabezeitpunkt,
                                ausgabepreis, storniert, bestaetigt, benutzer_id, speise_id)
                        values (#{konsumationszeitpunkt}, #{ausgabezeitpunkt}, #{ausgabepreis}, 
                                #{storniert}, #{bestaetigt}, #{benutzerId}, #{speiseId})
    </insert>

    <update id="update" parameterType="Bestellung">
        update bestellung set konsumationszeitpunkt = #{konsumationszeitpunkt},
                              ausgabezeitpunkt = #{ausgabezeitpunkt},
                              ausgabepreis = #{ausgabepreis},
                              storniert = #{storniert},
                              bestaetigt = #{bestaetigt},
                              benutzer_id = #{benutzerId},
                              speise_id = #{speiseId}
                        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        delete from bestellung where id = #{id}
    </delete>

    <select id="auswertung" parameterType="map" resultMap="auswertungResultMap">
        select s.id as sid, s.name as sname, s.lagerstand as slagerstand,
               b.id as bid, b.konsumationszeitpunkt as bkonsumationszeitpunkt,
               b.bestaetigt as bbestaetigt, b.storniert as bstorniert,
               u.id as uid, u.benutzername as ubenutzername, u.nachname as unachname,
               u.titel as utitel, u.vorname as uvorname,
               u.personal_nummer as upersonal_nummer
            from speise s right outer join bestellung b on b.speise_id = s.id
                 inner join benutzer u on b.benutzer_id = u.id
            where konsumationszeitpunkt &gt;= #{begin}
                  and konsumationszeitpunkt &lt; #{end}
            order by s.name, b.konsumationszeitpunkt, u.benutzername
    </select>

    <resultMap id="auswertungResultMap" type="AuswertungItem">
        <id property="speise.id" column="sid"/>
        <result property="speise.name" column="sname"/>
        <result property="speise.lagerstand" column="slagerstand"/>
        <collection property="bestellungen" ofType="Bestellung">
            <id property="id" column="bid"/>
            <result property="konsumationszeitpunkt" column="bkonsumationszeitpunkt"/>
            <result property="bestaetigt" column="bbestaetigt"/>
            <result property="storniert" column="bstorniert"/>
            <association property="benutzer" column="uid" javaType="Benutzer">
                <id property="id"/>
                <result property="benutzername" column="ubenutzername"/>
                <result property="nachname" column="unachname"/>
                <result property="titel" column="utitel"/>
                <result property="vorname" column="uvorname"/>
                <result property="personalNummer" column="upersonal_nummer"/>
            </association>
        </collection>
    </resultMap>

</mapper>
