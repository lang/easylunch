<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:sec="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">

    <!-- we use this for JSR-303 annotation validations -->
    <mvc:annotation-driven/>

    <bean id="validator"
        class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <!-- make spring scan annotations like @Controller, @Component, ... -->
    <context:component-scan base-package="com.github.lang.easylunch"/>

    <!-- view configuration -->

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/freemarker/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="number_format">0.#############################</prop>
                <!-- number of seconds after which freemarker checks if a
                     template was updated -->
                <prop key="template_update_delay">1</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="output_encoding">UTF-8</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="auto_import">
                    /spring.ftl as spring
                </prop>
                <prop key="auto_include">
                    /lib/utils.ftl,
                    /lib/base_html.ftl
                </prop>
            </props>
        </property>
    </bean>

    <!-- resolves freemarker views and redirect: views -->
    <bean id="urlBasedViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="order" value="1"/> <!-- must be last view resolver -->
        <property name="suffix" value=".ftl"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!--
                <value>classpath:validation-messages</value>
                -->
                <value>classpath:org/springframework/security/messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- transactions/mybatis-spring configuration -->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="WEB-INF/mybatis-config.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.github.lang.easylunch.persistence" />
    </bean>

    <bean id="benutzerMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface"
            value="com.github.lang.easylunch.persistence.BenutzerMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="speiseMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface"
            value="com.github.lang.easylunch.persistence.SpeiseMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="bestellungMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface"
            value="com.github.lang.easylunch.persistence.BestellungMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    
    <bean id="bestellungenMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
    	<property name="mapperInterface"
    		value="com.github.lang.easylunch.persistence.BestellungenMapper"/>
    	<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- security -->

    <sec:http auto-config='true'>
        <!--
        <sec:form-login login-page="/wui/login" default-target-url="/wui/home"/>
        -->
        <sec:intercept-url pattern="/wui/login*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/public/**" filters="none"/>
        <sec:intercept-url pattern="/wui/benutzer/**" access="ROLE_VERWALTUNG" />
        <sec:intercept-url pattern="/**" access="ROLE_USER" />
    </sec:http>

    <bean id="passwordEncoder"
        class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>

    <sec:authentication-manager>
        <sec:authentication-provider user-service-ref='benutzerService'>
            <sec:password-encoder ref="passwordEncoder">
                <sec:salt-source user-property="passwordSalt"/>
            </sec:password-encoder>
        </sec:authentication-provider>
    </sec:authentication-manager>

</beans>
